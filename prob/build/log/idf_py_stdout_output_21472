[1/11] Performing build step for 'bootloader'
[1/1] cd /home/raesangur/github/UdeS_S6_APP4/prob/build/bootloader/esp-idf/esptool_py && /home/raesangur/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/raesangur/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/raesangur/github/UdeS_S6_APP4/prob/build/bootloader/bootloader.bin
Bootloader binary size 0x68b0 bytes. 0x750 bytes (7%) free.
[2/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/manchester.c.obj
[3/9] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/message.c.obj
[4/9] Linking C static library esp-idf/main/libmain.a
[5/9] Generating ld/sections.ld
[6/9] Linking CXX executable APP4.elf
[7/9] Generating binary image from built executable
esptool.py v4.6.2
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/raesangur/github/UdeS_S6_APP4/prob/build/APP4.bin
[8/9] cd /home/raesangur/github/UdeS_S6_APP4/prob/build/esp-idf/esptool_py && /home/raesangur/.espressif/python_env/idf5.2_py3.10_env/bin/python /home/raesangur/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/raesangur/github/UdeS_S6_APP4/prob/build/partition_table/partition-table.bin /home/raesangur/github/UdeS_S6_APP4/prob/build/APP4.bin
APP4.bin binary size 0x2c2f0 bytes. Smallest app partition is 0x100000 bytes. 0xd3d10 bytes (83%) free.
[8/9] cd /home/raesangur/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/raesangur/esp/esp-idf -D "SERIAL_TOOL=/home/raesangur/.espressif/python_env/idf5.2_py3.10_env/bin/python;;/home/raesangur/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/raesangur/github/UdeS_S6_APP4/prob/build -P /home/raesangur/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 APP4.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.6.2
Serial port /dev/ttyUSB0
Connecting....
Chip is ESP32-D0WD-V3 (revision v3.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: c0:49:ef:4b:2a:c8
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x0003cfff...
Flash will be erased from 0x00008000 to 0x00008fff...
Compressed 26800 bytes to 16834...
Writing at 0x00001000... (50 %)
Writing at 0x0000767b... (100 %)
Wrote 26800 bytes (16834 compressed) at 0x00001000 in 0.7 seconds (effective 285.9 kbit/s)...
Hash of data verified.
Compressed 180976 bytes to 100568...
Writing at 0x00010000... (14 %)
Writing at 0x0001c2ac... (28 %)
Writing at 0x00021c06... (42 %)
Writing at 0x0002771e... (57 %)
Writing at 0x0002da91... (71 %)
Writing at 0x000358d7... (85 %)
Writing at 0x0003b444... (100 %)
Wrote 180976 bytes (100568 compressed) at 0x00010000 in 2.8 seconds (effective 513.7 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.1 seconds (effective 459.4 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
